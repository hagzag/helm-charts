# Default values for mc1.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
## @param replicaCount [number, nullable] Description
replicaCount: 1
 ## @section image".
 ## @param image.repository  image repository
 ## @param image.pullPolicy image pullPolicy
 ## @param image.tag image tag
image:
  repository: example
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
## @param imagePullSecrets Image registry secret names as an array
imagePullSecrets: []
## @param nameOverride Default name override
nameOverride: ""
## @param fullnameOverride Default full name override
fullnameOverride: ""
## @section serviceAccount".
## @param serviceAccount.create  Enabled / Disabeld service acount
## @param serviceAccount.annotations serviceAccount annotations
## @param serviceAccount.name serviceAccount name
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
## @param podAnnotations podAnnotations
podAnnotations: {}
## @param podSecurityContext podSecurityContext
podSecurityContext: {}
  # fsGroup: 2000
## @param securityContext securityContext
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
## @section service".
## @param service.example.annotations service annotations
## @param service.example.type  service type (ClusterIP , NodePort)
## @param service.example.port service port
service:
  example:
    annotations: {}
    type: ClusterIP
    port: 80
## @section ingress".
ingress:
  ## @param ingress.enabled Enable ingress record generation
  enabled: false
  ## @param ingress.className IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  className: ""
  ## @param ingress.annotations [object] Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  ## @param ingress.hosts[0].paths[0].path
  ## @param ingress.hosts[0].paths[0].pathType
  ## - paths:
  ##    - path: /
  ##      pathType: Prefix
  hosts:
    - paths:
        - path: /
          pathType: Prefix
  ## @param ingress.tls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## tls:
  ##  - secretName: chart-example-tls
  ##    hosts:
  ##     - chart-example.local
  ##
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
 ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
 ## @param resources The resources limits/requests for the chart-example containers
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## @section kedaautoscaler".
## @param kedaautoscaler.enabled Enabled/Disabeld thew hpa
## @param kedaautoscaler.minReplicaCount Min number of replicas
## @param kedaautoscaler.maxReplicaCount Max number of replicas
## @param kedaautoscaler.pollingInterval How often KEDA polls to report new scale requests to the HPA
## @param kedaautoscaler.cooldownPeriod How many seconds KEDA will wait before scaling to zero
## @param kedaautoscaler.advanced The behavior to scaledown
## @param kedaautoscaler.triggers The cpu metrcis that cause the scaleup
kedaautoscaler:
  enabled: false
  kind: Deployment
  minReplicaCount: 1
  maxReplicaCount: 5
  pollingInterval: 5
  cooldownPeriod: 30
  advanced: {}
  # advanced:
  #   horizontalPodAutoscalerConfig:
  #     behavior:
  #       scaleDown:
  #         stabilizationWindowSeconds: 300
  #         policies:
  #           - type: Percent
  #             value: 100
  #             periodSeconds: 15
  triggers: {}
  # triggers:
  # - type: cpu
  #   metadata:
  #     type: Utilization
  #     value: "80"
## @section autoscaling".
## @param autoscaling.enabled Enabled/Disabeld thew hpa
## @param autoscaling.minReplicaCount Min number of replicas
## @param autoscaling.maxReplicaCount Max number of replicas
## @param autoscaling.metrics The cpu metrcis that cause the scaleup
## @param autoscaling.behavior The behavior to scaledown
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      policies:
      - type: Pods
        value: 4
        periodSeconds: 60
      - type: Percent
        value: 10
        periodSeconds: 60
## nodeSelector:
##   role: eks-cluster
## nodeSelector: {}
## tolerations:
## - key: intention
##   operator: Equal
##   value: eks-cluster-mgt
##   effect: NoSchedule
## tolerations: []
## affinity:
##   podAntiAffinity:
##     preferredDuringSchedulingIgnoredDuringExecution:
##      - weight: 100
##        podAffinityTerm:
##          labelSelector:
##            matchExpressions:
##              - key: "component"
##                operator: In
##                values:
##                - zookeeper
##          topologyKey: "topology.kubernetes.io/zone"
## affinity: {}
## @section deployment
## @param deployment.example.image.repository  image repository
## @param deployment.example.image.pullPolicy image pullPolicy
## @param deployment.example.image.tag image tag
## @param deployment.example.envFroms[0].envFrom[0].configMapRef.name - the name of configmap or secretRef
## deployment:
##   api: (The deployment name)
##     envFrom:
##       - configMapRef:
##           name: my-config
##       - secretRef:
##           name: my-secret
##     env:
##       - name: environment
##         value: default
##     image:
##       repository: nginx
##       pullPolicy: IfNotPresent
##       # Overrides the image tag whose default is the chart appVersion.
##       tag: ""
deployment:
  example:
    image:
      repository: example
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: ""
    envFroms:
      - envFrom:
          - configMapRef:
              name: example-service
## @section cronjob Array of cronjob with name (e.g example )
## @param cronjob.example.schedule the cron schedule
## @param cronjob.example.successfulJobsHistoryLimit
## @param cronjob.example.failedJobsHistoryLimit
## @param cronjob.example.restartPolicy of cron job
## @param cronjob.example.container.image (e.g if you don't pass image the container of cronjob will use the default image of the service named by the chart (api-server) )
## @param cronjob.example.container.command  array of commands
## cronjob:
##   example:
##     schedule: */10 * * * *
##     successfulJobsHistoryLimit: 1
##     failedJobsHistoryLimit: 2
##     restartPolicy: OnFailure
##     container:
##       image: busybox
##       command: ["/bin/sh","-c","echo 'test'"]
cronjob:
  example:
    schedule: "*/10 * * * *"
    successfulJobsHistoryLimit: "1"
    failedJobsHistoryLimit: "2"
    restartPolicy: "OnFailure"
    container:
      image: busybox
      command: ["/bin/sh", "-c", "echo 'test' "]
